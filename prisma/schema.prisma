// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String?
  email String? @unique
  emailVerified DateTime?
  image String?
  hashedPassword String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  conversationIds String[] @db.ObjectId
  seenMessageIds String[] @db.ObjectId


  //relations
  conversations Conversation[] @relation(fields: [conversationIds], references: [id])
  seenMessages Message[] @relation("Seen", fields: [seenMessageIds], references: [id])
  accounts Account[]
  messages Message[]
}


model Account {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  type String
  provider String
  providerAccountId String
  refresh String? @db.String
  access_token String? @db.String
  expires_at Int?
  token_type String?
  scope String?
  id_token String? @db.String
  session_state String?


  //relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@unique([provider,providerAccountId])
}


model Conversation {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  created_at DateTime @default(now())
  lastMessageAt DateTime @default(now())
  name String?
  isGroup Boolean?
  messageIds String[] @db.ObjectId
  messages Message[]
  userIds String[] @db.ObjectId


  //relations
  users User[] @relation(fields: [userIds], references: [id])
}


model Message {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  body String?
  image String?
  created_at DateTime @default(now())
  seenIds String[] @db.ObjectId
  conversationId String @db.ObjectId
  senderId String @db.ObjectId


  //relations
  seen User[] @relation("Seen", fields: [seenIds], references: [id])
  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  sender User @relation(fields: [senderId], references: [id], onDelete: Cascade)
}
